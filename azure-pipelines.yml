# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

trigger:
    branches:
        include:
            - master

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.gradle

jobs:

- job: Build
  steps:
  - checkout: self
    submodules: true
  - task: Cache@2
    inputs:
        key: 'gradle | "$(Agent.OS)" | **/build.gradle.kts | **/build.gradle' # Swap build.gradle.kts for build.gradle when using Groovy
        restoreKeys: |
            gradle | "$(Agent.OS)"
            gradle
        path: $(GRADLE_USER_HOME)
    displayName: Configure gradle caching
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: ':app:assembleRelease'
      options: '--build-cache'
  - script: |   
      # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
      ./gradlew --stop    
    displayName: Build
  - task: AndroidSigning@3
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      apkFiles: '**/*.apk'
      apksignerKeystoreFile: 'en-YCH.jks'
      apksignerKeystorePassword: '$(keyStorePassword)'
      apksignerKeystoreAlias: '$(keyAlias)'
      apksignerKeyPassword: '$(keyPassword)'
  - task: CopyFiles@2
    inputs:
      Contents: '**/*.apk'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      CleanTargetFolder: true
      flattenFolders: true
  - publish: $(Build.ArtifactStagingDirectory)
    artifact: APK

- job: Pull
  
  steps:
  - checkout: self
  - script: |
      git config --global user.name "QNotified Auto Deploy Bot"
      git config --global user.email "dmca@ioctl.cc"
      git remote rm origin
      git remote add origin https://$(GITHUB_TOKEN)@github.com/Xposed-Modules-Repo/nil.nadph.qnotified.git
      git push -f origin HEAD:master

- job: Distribute
  dependsOn: Build
  condition: and(succeeded('Build'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  steps:
  - checkout: none
  - download: current
    artifact: APK
  - task: AppCenterDistribute@3
    displayName: AppCenter Canary
    inputs:
      serverEndpoint: 'QNotified'
      appSlug: 'QNotifiedDev/QNotified'
      appFile: '$(Pipeline.Workspace)/APK/*.apk'
      symbolsOption: 'Android'
      releaseNotesOption: 'input'
      releaseNotesInput: '$(Build.SourceVersionMessage)'
      destinationType: 'groups'
      distributionGroupId: 'c7a5954e-6861-438f-ad02-fb765d4d889f'
  - task: AppCenterDistribute@3
    displayName: AppCenter Weekly
    condition: contains(variables['Build.SourceVersionMessage'], 'release')
    inputs:
      serverEndpoint: 'QNotified'
      appSlug: 'QNotifiedDev/QNotified'
      appFile: '$(Pipeline.Workspace)/APK/*.apk'
      symbolsOption: 'Android'
      releaseNotesOption: 'input'
      releaseNotesInput: '$(Build.SourceVersionMessage)'
      destinationType: 'groups'
      distributionGroupId: '8a11cc3e-47da-4e3b-84e7-ac306a128aaf'
  - task: GitHubRelease@1
    displayName: LSPosed Release CI
    condition: and(succeeded(),not(contains(variables['Build.SourceVersionMessage'], 'release')))
    inputs:
      gitHubConnection: 'github.com_singleNeuron'
      repositoryName: 'Xposed-Modules-Repo/nil.nadph.qnotified'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: $(Build.BuildNumber)
      title: '$(Build.SourceVersion)'
      releaseNotesSource: 'inline'
      releaseNotesInline: '$(Build.SourceVersionMessage)'
      assets: '$(Pipeline.Workspace)/APK/*.apk'
      isPreRelease: true
      changeLogCompareToRelease: 'lastNonDraftRelease'
      changeLogType: 'commitBased'
  - task: GitHubRelease@1
    displayName: LSPosed Release Weekly
    condition: and(succeeded(),contains(variables['Build.SourceVersionMessage'], 'release'))
    inputs:
      gitHubConnection: 'github.com_singleNeuron'
      repositoryName: 'Xposed-Modules-Repo/nil.nadph.qnotified'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: $(Build.BuildNumber)
      title: '$(Build.SourceVersionMessage)'
      releaseNotesSource: 'inline'
      releaseNotesInline: '$(Build.SourceVersionMessage)'
      assets: '$(Pipeline.Workspace)/APK/*.apk'
      changeLogCompareToRelease: 'lastNonDraftRelease'
      changeLogType: 'commitBased'
  - task: GitHubRelease@1
    displayName: Github Release Weekly
    condition: contains(variables['Build.SourceVersionMessage'], 'release')
    inputs:
      gitHubConnection: 'github.com_singleNeuron'
      repositoryName: 'ferredoxin/QNotified'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: $(Build.BuildNumber)
      title: '$(Build.SourceVersionMessage)'
      releaseNotesSource: 'inline'
      releaseNotesInline: '$(Build.SourceVersionMessage)'
      assets: '$(Pipeline.Workspace)/APK/*.apk'
      addChangeLog: false
